apiVersion: v1
kind: Namespace
metadata:
  name: docksafe
  labels:
    name: docksafe
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: docksafe-config
  namespace: docksafe
data:
  FLASK_ENV: "production"
  DATABASE_URL: "postgresql://docksafe:${DB_PASSWORD}@postgres-service:5432/docksafe"
  REDIS_URL: "redis://redis-service:6379/0"
---
apiVersion: v1
kind: Secret
metadata:
  name: docksafe-secrets
  namespace: docksafe
type: Opaque
data:
  SECRET_KEY: # Base64 encoded secret key
  DB_PASSWORD: # Base64 encoded database password
  GOOGLE_CLIENT_SECRET: # Base64 encoded Google client secret
  EMAIL_PASSWORD: # Base64 encoded email password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docksafe-app
  namespace: docksafe
  labels:
    app: docksafe-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: docksafe-app
  template:
    metadata:
      labels:
        app: docksafe-app
    spec:
      containers:
      - name: docksafe-app
        image: ghcr.io/your-username/docksafe:latest
        ports:
        - containerPort: 5000
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: docksafe-secrets
              key: SECRET_KEY
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docksafe-secrets
              key: DB_PASSWORD
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: docksafe-secrets
              key: GOOGLE_CLIENT_SECRET
        - name: EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docksafe-secrets
              key: EMAIL_PASSWORD
        envFrom:
        - configMapRef:
            name: docksafe-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: docksafe-service
  namespace: docksafe
spec:
  selector:
    app: docksafe-app
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: docksafe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "docksafe"
        - name: POSTGRES_USER
          value: "docksafe"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docksafe-secrets
              key: DB_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: docksafe
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: docksafe
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: docksafe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: docksafe
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docksafe-ingress
  namespace: docksafe
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - docksafe.yourdomain.com
    secretName: docksafe-tls
  rules:
  - host: docksafe.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docksafe-service
            port:
              number: 80
