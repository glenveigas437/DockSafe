# Example: How to integrate DockSafe with your project's CI/CD
# File: .github/workflows/security-scan.yml

name: Security Scan with DockSafe

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        # Build your project's Docker image
        docker build -t myproject:${{ github.sha }} .
        
    - name: Start DockSafe (if running locally)
      run: |
        # If you have DockSafe running locally
        # This step is optional if DockSafe is already running
        docker-compose up -d docksafe
        sleep 10
        
    - name: Scan for vulnerabilities
      run: |
        # Scan your image using DockSafe API
        SCAN_RESPONSE=$(curl -X POST http://localhost:5001/scanner/scan \
          -H "Content-Type: application/json" \
          -d '{
            "image_name": "myproject",
            "image_tag": "'${{ github.sha }}'"
          }')
        
        echo "Scan response: $SCAN_RESPONSE"
        
        # Extract scan ID
        SCAN_ID=$(echo $SCAN_RESPONSE | jq -r '.scan_id')
        echo "Scan ID: $SCAN_ID"
        
        # Wait for scan to complete
        sleep 5
        
        # Get scan results
        SCAN_RESULT=$(curl -s http://localhost:5001/scanner/scan/$SCAN_ID)
        echo "Scan result: $SCAN_RESULT"
        
        # Check for critical/high vulnerabilities
        CRITICAL_COUNT=$(echo $SCAN_RESULT | jq -r '.scan.critical_count')
        HIGH_COUNT=$(echo $SCAN_RESULT | jq -r '.scan.high_count')
        
        echo "Critical vulnerabilities: $CRITICAL_COUNT"
        echo "High vulnerabilities: $HIGH_COUNT"
        
        # Fail build if vulnerabilities found
        if [ "$CRITICAL_COUNT" -gt 0 ] || [ "$HIGH_COUNT" -gt 0 ]; then
          echo "❌ Critical or high vulnerabilities detected!"
          echo "Build failed due to security vulnerabilities."
          exit 1
        else
          echo "✅ No critical or high vulnerabilities found"
          echo "Build can proceed safely."
        fi
        
    - name: Generate security report
      if: always()
      run: |
        # Generate detailed report
        curl -X POST http://localhost:5001/reports/generate \
          -H "Content-Type: application/json" \
          -d '{
            "scan_id": "'$SCAN_ID'",
            "format": "json"
          }' > security-report.json
        
        # Upload report as artifact
        echo "Security report generated"
        
    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-report
        path: security-report.json
        
    - name: Notify team (optional)
      if: failure()
      run: |
        echo "Security scan failed! Check the report for details."
        # Add Slack/Teams notification here
        # curl -X POST $SLACK_WEBHOOK_URL \
        #   -H "Content-Type: application/json" \
        #   -d '{"text": "Security scan failed for '${{ github.repository }}'"}'
