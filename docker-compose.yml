version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: docksafe-postgres
    environment:
      POSTGRES_DB: docksafe
      POSTGRES_USER: docksafe
      POSTGRES_PASSWORD: docksafe_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docksafe -d docksafe"]
      interval: 30s
      timeout: 10s
      retries: 3

  # DockSafe Application
  docksafe:
    build: .
    container_name: docksafe-app
    environment:
      FLASK_ENV: production
      DATABASE_URL: postgresql://docksafe:docksafe_password@postgres:5432/docksafe
      SECRET_KEY: your-secret-key-change-in-production
      SCANNER_TYPE: trivy
      SCANNER_TIMEOUT: 300
      VULNERABILITY_THRESHOLD: HIGH
      LOG_LEVEL: INFO
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: docksafe-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: docksafe-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
