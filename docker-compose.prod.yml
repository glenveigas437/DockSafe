version: '3.8'

services:
  # DockSafe Application
  docksafe-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - DOCSAFE_EMAIL_SMTP_SERVER=${DOCSAFE_EMAIL_SMTP_SERVER}
      - DOCSAFE_EMAIL_SMTP_PORT=${DOCSAFE_EMAIL_SMTP_PORT}
      - DOCSAFE_EMAIL_USERNAME=${DOCSAFE_EMAIL_USERNAME}
      - DOCSAFE_EMAIL_PASSWORD=${DOCSAFE_EMAIL_PASSWORD}
      - DOCSAFE_EMAIL_FROM=${DOCSAFE_EMAIL_FROM}
      - DOCSAFE_EMAIL_USE_TLS=${DOCSAFE_EMAIL_USE_TLS}
    volumes:
      - docksafe-data:/app/instance
    depends_on:
      - redis
      - postgres
    networks:
      - docksafe-network
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - docksafe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    networks:
      - docksafe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Trivy Scanner Service
  trivy:
    image: aquasec/trivy:latest
    command: server --listen 0.0.0.0:4954
    volumes:
      - trivy-cache:/root/.cache/trivy
    networks:
      - docksafe-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - docksafe-app
    networks:
      - docksafe-network
    restart: unless-stopped

volumes:
  docksafe-data:
  postgres-data:
  redis-data:
  trivy-cache:

networks:
  docksafe-network:
    driver: bridge
