name: DockSafe Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.13'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Set up environment variables
      run: |
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///test.db" >> $GITHUB_ENV
        echo "JWT_SECRET_KEY=test-jwt-secret" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_ID=test-client-id" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_SECRET=test-client-secret" >> $GITHUB_ENV

    - name: Run tests with coverage
      run: |
        python -m pytest --cov=app --cov-report=xml --cov-report=html --cov-report=term-missing

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          .pytest_cache/
        retention-days: 7