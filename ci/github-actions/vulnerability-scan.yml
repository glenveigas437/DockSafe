name: Vulnerability Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Docker image
      run: |
        docker build -t docksafe:${{ github.sha }} .
        
    - name: Run vulnerability scan
      run: |
        # Start DockSafe application
        docker-compose up -d postgres
        sleep 10
        
        # Run scan using DockSafe API
        curl -X POST http://localhost:5000/scanner/scan \
          -H "Content-Type: application/json" \
          -d '{
            "image_name": "docksafe",
            "image_tag": "'${{ github.sha }}'"
          }'
          
    - name: Check scan results
      run: |
        # Get latest scan results
        SCAN_RESULT=$(curl -s http://localhost:5000/scanner/history?limit=1)
        
        # Check if scan has critical or high vulnerabilities
        if echo "$SCAN_RESULT" | jq -e '.scans[0].critical_count > 0 or .scans[0].high_count > 0' > /dev/null; then
          echo "❌ Critical or high vulnerabilities detected!"
          echo "$SCAN_RESULT" | jq '.scans[0]'
          exit 1
        else
          echo "✅ No critical or high vulnerabilities found"
          echo "$SCAN_RESULT" | jq '.scans[0]'
        fi
        
    - name: Upload scan report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: vulnerability-scan-report
        path: scan-report.json
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "Vulnerability scan failed! Check the scan results for details."
        # Add notification logic here (Slack, Teams, etc.)
